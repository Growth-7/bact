server {
    listen 80;
    server_name bact.eunaapps.com;

    # --- Real client IP behind Cloudflare/Traefik ---
    real_ip_recursive on;
    real_ip_header X-Forwarded-For;
    # Trust internal Docker network and Cloudflare IP ranges
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;

    # 403 -> redirect browsers to SPA block page
    error_page 403 =302 /ip-bloqueado;

    root /usr/share/nginx/html;
    index index.html;

    # Exact exception for block page to avoid loops
    location = /ip-bloqueado {
        try_files $uri /index.html;
    }

    # Allow SPA assets and favicon so the block page can render
    location ^~ /assets/ {
        try_files $uri =404;
    }
    location = /favicon.ico {
        try_files /favicon.ico =204;
    }

    # Frontend (apply whitelist here only)
    location / {
        # Whitelist of allowed public IPs
        allow 190.123.8.237;
        allow 187.120.14.146;
        allow 177.126.4.226;
        allow 177.30.133.61;
        allow 2804:214:906c:e1ab:7975:e4da:b6e4:5fa1;
        deny all;

        try_files $uri /index.html;
    }

    # API (apply whitelist here; keep plain 403 on block)
    location /api/ {
        # Override 403 handling for API to return plain 403 instead of redirect
        error_page 403 = @api_forbid;

        allow 190.123.8.237;
        allow 187.120.14.146;
        allow 177.126.4.226;
        allow 177.30.133.61;
        allow 2804:214:906c:e1ab:7975:e4da:b6e4:5fa1;
        deny all;

        proxy_pass http://backend:3333;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location @api_forbid {
        return 403;
    }
}
