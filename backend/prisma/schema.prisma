generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id               String       @id @default(cuid())
  username         String       @unique
  password         String
  email            String?      @unique
  user_id_bitrix24 String       @unique
  birth_date       DateTime?
  submissions      Submission[]
  createdAt        DateTime     @default(now())

  user_type UserType @map("type_user") @default(OPERATOR)
  status    UserStatus @map("UserStatus") @default(PENDING_APPROVAL)
}

model Submission {
  id              String   @id @default(cuid())
  location        String
  submissionType  String
  documentType    String
  
  nomeFamilia     String
  idFamilia       String
  nomeRequerente  String?
  idRequerente    String?
  documentNature  String?
  documentoVinculado String?
  
  fileUrls        String[]
  bitrixDealId    String?
  status          SubmissionStatus @default(PENDING)
  statusDetails   String?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  user            User     @relation(fields: [userId], references: [id])
  userId          String
}

model FamilyCache {
  id            String  @id
  bitrixId      String? @unique
  requerenteId  String?
  familiaId     String?
  familiaName   String
  
  @@map("family_cache")
}

enum SubmissionStatus {
  PENDING
  PROCESSING
  UPLOADING_FILES
  CREATING_DEAL
  COMPLETED
  FAILED
}

enum UserType {
  ADMIN
  VIEWER
  OPERATOR

  @@map("type_user")
}

enum UserStatus {
  PENDING_APPROVAL
  ACTIVE
  REJECTED
  INACTIVE

  @@map("UserStatus")
}

model BlockedIp {
  id        String   @id @default(cuid())
  ipAddress String
  createdAt DateTime @default(now())

  @@map("blocked_ips")
}

